/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { Edges, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    dsa: THREE.Mesh;
  };
  materials: {
    diffuse_245_245_246_255: THREE.MeshStandardMaterial;
  };
};

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials } = useGLTF("/models/dsa.glb") as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.dsa.geometry}
        rotation={[Math.PI / 2, 0, 0]}
        scale={1}
      >
        <meshStandardMaterial transparent />
        <Edges />
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/dsa.glb");
