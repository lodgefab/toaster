/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { Edges, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube006: THREE.Mesh
    Cube006_1: THREE.Mesh
    Cube006_2: THREE.Mesh
    Cube006_3: THREE.Mesh
  }
  materials: {
    ['toaster_black.001']: THREE.MeshStandardMaterial
    ['toaster_silver.001']: THREE.MeshStandardMaterial
    ['bread_plain.001']: THREE.MeshStandardMaterial
    ['bread_ear.001']: THREE.MeshStandardMaterial
  }
}

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/toaster-transformed.glb') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[Math.PI, 0, Math.PI]}>
        <mesh geometry={nodes.Cube006.geometry}  >
          
        </mesh>
        <mesh geometry={nodes.Cube006_1.geometry} >
          <meshStandardMaterial transparent attach='material'/>
          <Edges />
        </mesh>
        <mesh geometry={nodes.Cube006_2.geometry} >
        <meshStandardMaterial transparent attach='material'/>
          <Edges />
        </mesh>
        <mesh geometry={nodes.Cube006_3.geometry} >
        <meshStandardMaterial transparent attach='material'/>
          <Edges />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/models/toaster-transformed.glb')
